import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'                # to ignore tensorflow error messages...

import tensorflow as tf
import keras
from keras import layers
from tensorflow.keras import optimizers
from keras.datasets import mnist

# If you face any issue to run the code in GPU...,
physical_devices = tf.config.list_physical_devices('GPU')
try:
  tf.config.experimental.set_memory_growth(physical_devices[0], True)
except:
  pass

(x_train,y_train),(x_test,y_test) = mnist.load_data()
x_train = x_train.astype('float32')/255.0
x_test = x_test.astype('float32')/255.0

model = keras.Sequential()
model.add(keras.Input(shape=(None, 28)))
model.add(
    layers.Bidirectional(layers.LSTM(256, return_sequences=True, activation='tanh'))
)
model.add(
    layers.Bidirectional(layers.LSTM(256, activation='tanh'))
)
model.add(layers.Dense(10))

model.compile(
  loss = keras.losses.SparseCategoricalCrossentropy(from_logits=True),
  optimizer=optimizers.Adam(learning_rate=0.001),
  metrics=['accuracy']
)

model.fit(x_train, y_train, batch_size=64, epochs=10, verbose=2)
model.evaluate(x_test, y_test, batch_size=64, verbose=2)
print(model.summary())